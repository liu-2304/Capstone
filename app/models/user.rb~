class User < ActiveRecord::Base
  has_many :testfiles

  attr_accessible :id, :name, :remember_token, :email, :password, :password_confirmation

  before_save { self.email = email.downcase }
  before_create :create_remember_token
  validates :name, presence: true, length: { maximum: 50 }
  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
  validates :email, presence: true, format:{ with: VALID_EMAIL_REGEX }, uniqueness: {case_sensitive: false }
  has_secure_password
  validates :password, length: { minimum: 6, :allow_blank => true }

  #This method is associated with password reset, it generates a pw reset token
  def send_password_reset
    generate_token(:password_reset_token)
    self.password_reset_sent_at = Time.zone.now
    save!
    UserMailer.password_reset(self).deliver
  end

  def generate_token(column)
    begin
      self[column] = SecureRandom.urlsafe_base64
    end while User.exists?(column => self[column])
  end
    




end
