class MaterialsController < ApplicationController
  before_action :set_material, only: [:show, :edit, :update, :destroy]
  before_action :check_access, only: [:edit, :update, :create, :new, :destroy]
  # GET /materials
  # GET /materials.json
  def index
    @filterrific = filterrific.new(Material, params[:filterrific] || session[:filterrific_materials])
    @materials = Material.filterrific_find(@filterrific).page(params[:page])
    session[:filterrific_materials] = @filterrific.to_hash

    respond_to do |format|
    format.html
    format.js
    format.csv { render text: @materials.to_csv }
    format.xls # {send_data @materials.to_csv(col_sep: "\t") }
    end
   
  end

  def reset_filterrific
    session[:filterrific_materials] = nil
    redirect_to :action => :index
  end
  # GET /materials/1
  # GET /materials/1.json
  def show
    @testfiles = Testfile.where(:id => @material.id)
  end

  # GET /materials/new
  def new
    @material = Material.new
  end

  # GET /materials/1/edit
  def edit
  end

  # POST /materials
  # POST /materials.json
  def create
    @material = Material.new(material_params)

    respond_to do |format|
      if @material.save
        format.html { redirect_to @material, notice: 'Material was successfully created.' }
        format.json { render :show, status: :created, location: @material }
      else
        format.html { render :new }
        format.json { render json: @material.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /materials/1
  # PATCH/PUT /materials/1.json
  def update
    respond_to do |format|
      if @material.update(material_params)
        format.html { redirect_to @material, notice: 'Material was successfully updated.' }
        format.json { render :show, status: :ok, location: @material }
      else
        format.html { render :edit }
        format.json { render json: @material.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /materials/1
  # DELETE /materials/1.json
  def destroy
    @material.destroy
    @testfiles = Testfile.find(:all, :conditions => ["id = ? AND material_type = ?", @material.id, @material.material_type])
    @testfiles.each do |testfile|
      testfile.destroy
    end
    respond_to do |format|
      format.html { redirect_to materials_url, notice: 'Material was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_material
      @material = Material.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def material_params
      params.require(:material).permit(:name, :material_type, :id)
    end
end
